@using static PropertyManagerFL.Application.Shared.Enums.AppDefinitions;

@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject IStringLocalizer<App> L

@implements IDisposable
@attribute [Authorize(Roles = "Admin")]


<div id="spinnerContainer"></div>
<SfSpinner @ref="SpinnerObj"
           Label="@L["MSG_PreparandoDados"]" Size="50"
           Type="SpinnerType.Bootstrap4"
           CssClass="e-spin-overlay">
</SfSpinner>

<div class="new-cards">
    <div class="card @CardType">
        <div class="card__icon"><i class="@CardSymbol"></i></div>
        <h2 class="card__title" style="font-size:x-large">@cardTitle</h2>
        <p class="card__apply" style="text-align:center;">
            <SfButton CssClass="btn e-outline e-round-corner card__link p-2" style="color:white"
                      IconCss="e-icons e-settings"
                      @onclick="@(e => NavigateToUrlAsync(tableParam!))" Content="@L["lblManutencao"]">
            </SfButton>

            @* <a class="card__link" href="#">Apply Now <i class="e-icons e-settings"></i></a> *@
        </p>
    </div>
</div>



@* <SfCard ID="table-card">
    <CardHeader Title="@cardTitle" ImageUrl="images/database-table-icon.png"></CardHeader>
    <CardFooter>
        <CardFooterContent>
            <hr />
            <div style="text-align:center;">
                <SfButton CssClass="e-info e-round-corner p-2" IconCss="e-icons e-settings"
                          @onclick="@(e => NavigateToUrlAsync(tableParam!))" Content="@L["lblManutencao"]">
                </SfButton>
            </div>
        </CardFooterContent>
    </CardFooter>
</SfCard>
 *@

<SfDialog Target="#target"
          Width="50%"
          Height="85%"
          IsModal="true"
          ShowCloseIcon="false"
          CloseOnEscape="true"
          @bind-Visible="PdfViewerVisibility">
    <DialogTemplates>
        <Content>
            @if (!string.IsNullOrEmpty(PdfFilePath))
            {
                <PdfViewer PdfPath="@PdfFilePath" />
            }
        </Content>
        <FooterTemplate>
            <div>
                <SfButton CssClass="e-outline e-round-corner"
                          IconCss="fas fa-times"
                          @onclick="CloseEditDialog">
                    Voltar
                </SfButton>
            </div>
        </FooterTemplate>
    </DialogTemplates>
    <DialogAnimationSettings Effect="@Effects" Duration=400></DialogAnimationSettings>
</SfDialog>


<style type="text/css" scoped>

    #table-card .e-card .e-card-content {
        font-size: 14px;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        line-height: initial;
        font-weight: normal;
        height: 70px;
        justify-content: flex-end;
    }
    /*Tile view card customization */
    #table-card .tile_layout.card-control-section .row.filter .tile_search {
        justify-content: flex-end;
    }

    #table-card .tile_layout.card-control-section .row .e-card {
        text-align: left;
        margin: 10px;
        background: radial-gradient(#1fe4f5, #3fbafe);
    }

    #table-card *, ::after, ::before {
        box-sizing: content-box
    }

    #table-card .card-control-section.tile_layout .e-card-layout {
        max-width: 890px;
    }

    #table-card .e-card .e-card-header .e-card-header-image {
        height: 48px;
        width: 48px;
    }


    .cards {
        max-width: 1200px;
        margin: 0 auto;
        display: grid;
        gap: 1rem;
    }


    .new-cards {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .card {
        margin: 20px;
        padding: 20px;
        min-height: 200px;
        display: grid;
        grid-template-rows: 20px 50px 1fr 50px;
        border-radius: 10px;
        box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.25);
        transition: all 0.2s;
    }

        .card:hover {
            box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.4);
            transform: scale(1.05);
        }

    .card__link,
    .card__exit,
    .card__icon {
        position: relative;
        text-decoration: none;
        color: rgba(255, 255, 255, 0.9);
    }

        .card__link::after {
            position: absolute;
            top: 25px;
            left: 0;
            content: "";
            width: 0%;
            height: 3px;
            background-color: rgba(255, 255, 255, 0.6);
            transition: all 0.5s;
        }

        .card__link:hover::after {
            width: 100%;
        }

    .card__exit {
        grid-row: 1/2;
        justify-self: end;
    }

    .card__icon {
        grid-row: 2/3;
        font-size: 30px;
    }

    .card__title {
        grid-row: 3/4;
        font-weight: 400;
        color: #ffffff;
    }

    .card__apply {
        grid-row: 4/5;
        align-self: center;
    }

    /* CARD BACKGROUNDS */

    .card-1 {
        background: radial-gradient(#1fe4f5, #3fbafe);
    }

    .card-2 {
        background: radial-gradient(#fbc1cc, #fa99b2);
    }

    .card-3 {
        background: radial-gradient(#76b2fe, #b69efe);
    }

    .card-4 {
        background: radial-gradient(#60efbc, #58d5c9);
    }

    .card-5 {
        background: radial-gradient(#f588d8, #c0a3e5);
    }

    /* RESPONSIVE */

    @@media (max-width: 1600px) {
        .cards {
            justify-content: center;
        }
    }



    @@media (min-width: 600px) {
        .cards {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (min-width: 900px) {
        .cards {
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>
