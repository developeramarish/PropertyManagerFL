@using PropertyManagerFL.Application.Interfaces.Services.Stats;
@using PropertyManagerFL.Core.Entities;
@using Syncfusion.Blazor.Charts


@inject IStringLocalizer<App> localizerApp
@inject IStatsService statsService
@inject IStringLocalizer<App> L

@attribute [Authorize]

<SfChart Title="@L["TituloTotalDespesas"]">
    <ChartPrimaryXAxis IntervalType="IntervalType.Auto" LabelFormat="{value}ºC" ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
    </ChartPrimaryXAxis>
    <ChartPrimaryYAxis Title="@L["TituloTotalDespesas"]" LabelPlacement="LabelPlacement.BetweenTicks"></ChartPrimaryYAxis>
    <ChartSeriesCollection>
        @foreach (var monthData in GroupedExpensesData)
        {
            <ChartSeries DataSource="@monthData"
                         Name="@monthData.Key"
                         XName="MonthOfExpenses" YName="TotalOfMonthExpenses"
                         Type="ChartSeriesType.StackingColumn">
                <ChartMarker>
                    <ChartDataLabel Visible="true"></ChartDataLabel>
                </ChartMarker>
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
        }
    </ChartSeriesCollection>
</SfChart>


@code {

    [Parameter] public IEnumerable<ExpensesSummaryDataByType>? Expenses { get; set; } = default;

    protected List<IGrouping<string, ExpensesSummaryDataByType>>? GroupedExpensesData;

    protected override void OnParametersSet()
    {
        GroupedExpensesData = Expenses?.GroupBy(c => c.TypeOfExpenses).ToList();
    }

}
