@using PropertyManagerFL.Application.Interfaces.Services.AppManager;
@using PropertyManagerFL.Application.Interfaces.Services.Common;
@using PropertyManagerFL.Core.Entities;
@using PropertyManagerFL.Application.ViewModels.EstadoCivil;
@using PropertyManagerFL.Application.ViewModels.Fiadores;
@using PropertyManagerFL.Application.ViewModels.Inquilinos;
@using PropertyManagerFL.Application.ViewModels.LookupTables;
@using PropertyManagerFL.UI.ApiWrappers;
@using static PropertyManagerFL.Application.Shared.Enums.AppDefinitions;

<div>
    <HeaderDialogComponent HeaderCaption="@HeaderCaption" ImageName="home-owner"></HeaderDialogComponent>
</div>
@if (MaritalStatus is null)
{
    <LoadingData />
}
else
{
    <div class="container-fluid">
        <hr style="color:black" >
        <EditForm Model="@L["TituloFiador"]" style="margin:auto">
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group mt-2">
                        <SfTextBox Enabled="true"
                                   Placeholder="@L["TituloNome"]"
                                   CssClass="e-field  e-corner"
                                   FloatLabelType="@FloatLabelType.Always"
                                   @bind-Value="@Fiador!.Nome">
                        </SfTextBox>
                    </div>
                    <div class="form-group mt-2">
                        <SfTextBox Enabled="true"
                                   Placeholder="@L["TituloMorada"]"
                                   CssClass="e-field  e-corner"
                                   FloatLabelType="FloatLabelType.Always"
                                   @bind-Value="@Fiador!.Morada">
                        </SfTextBox>
                    </div>
                </div>
                <div class="group-box">
                    <SfDropDownList TValue="int" TItem="LookupTableVM" AllowFiltering="true" CssClass="e-dropdown-popup ml-5"
                                    @bind-Value ="@Fiador.ID_EstadoCivil" ShowClearButton="true"
                                    FilterBarPlaceholder="@L["TituloSelecao"]" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                    Placeholder="@L["MSG_EstadoCivil"]" DataSource="@MaritalStatus" FloatLabelType="FloatLabelType.Always">
                        <DropDownListTemplates TItem="LookupTableVM">
                        </DropDownListTemplates>
                        <DropDownListEvents TValue="int" TItem="LookupTableVM" ValueChange="OnChangeEstadoCivil"></DropDownListEvents>
                        <DropDownListFieldSettings Value="Id" Text="Descricao"></DropDownListFieldSettings>
                    </SfDropDownList>
                    <SfTextBox Placeholder="@L["TituloIdentificacao"]"
                               CssClass="e-field  e-corner custom-class"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador!.Identificacao">
                    </SfTextBox>

                    @* <SfDatePicker Enabled="true" Placeholder="@L["TituloValidade"]"
                CssClass="e-corner"
                FloatLabelType="FloatLabelType.Always"
                @bind-Value="@Fiador.ValidadeCC">
                <DatePickerEvents TValue="DateTime"></DatePickerEvents>
                </SfDatePicker> *@
                </div>
                <div class="group-box-left">
                    <SfTextBox Placeholder="@(L["TituloCampo3Editoras"] + " #1")"
                               CssClass="e-field  e-corner custom-class"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador!.Contacto1">
                    </SfTextBox>
                    <SfTextBox Placeholder="@(L["TituloCampo3Editoras"] + " #2")"
                               CssClass="e-field  e-corner custom-class"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador!.Contacto2">
                    </SfTextBox>
                    <SfTextBox Placeholder="NIF"
                               CssClass="e-field  e-corner custom-class"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador!.NIF">
                    </SfTextBox>
                </div>
                <div class="form-group mt-2">
                    <SfTextBox Enabled="true"
                               Placeholder="e-mail"
                               CssClass="e-field e-corner"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador!.eMail">
                    </SfTextBox>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="group-box-left">
                    <SfNumericTextBox Placeholder="@L["TituloIrsAnual"]" @bind-Value="@Fiador.IRSAnual"
                                      Format="C2" FloatLabelType="FloatLabelType.Always" Width="150px"
                                      ShowSpinButton=false
                                      Currency="EUR" />
                    <SfNumericTextBox Placeholder="@L["TituloVencimento"]" @bind-Value="@Fiador.Vencimento"
                                      Format="C2" FloatLabelType="FloatLabelType.Always"
                                      ShowSpinButton=false Width="150px"
                                      Currency="EUR" />
                </div>
                <div class="form-group mt-2">
                    <SfTextBox Multiline=true Placeholder="@L["TituloNotas"]"
                               HtmlAttributes="NotesAttribute"
                               CssClass="e-field e-corner"
                               FloatLabelType="FloatLabelType.Always"
                               @bind-Value="@Fiador.Notas">
                    </SfTextBox>
                </div>
            </div>
        </EditForm>
    </div>
}

@code {

    [Inject] public ILookupTableService? LookupTablesService { get; set; }
    [Inject] public IInquilinoService? inquilinoService { get; set; }
    [Inject] public IFiadorService? fiadorService { get; set; }
    [Inject] public IStringLocalizer<App>? L { get; set; }

    [Parameter] public FiadorVM? Fiador { get; set; }
    [Parameter] public OpcoesRegisto EditMode { get; set; }
    [Parameter] public string? HeaderCaption { get; set; }

    protected int idxMaritalStatus;

    protected string? NomeInquilino { get; set; } = string.Empty;

    public IEnumerable<LookupTableVM>? MaritalStatus { get; set; }

    protected Dictionary<string, object> NotesAttribute = new Dictionary<string, object>()
{
            {"rows", "3" }
    };

    protected override async Task OnParametersSetAsync()
    {
        MaritalStatus = (await LookupTablesService!.GetLookupTableData("EstadoCivil")).ToList();
        idxMaritalStatus = Fiador!.ID_EstadoCivil;
        NomeInquilino = await inquilinoService!.GetNomeInquilino(Fiador.IdInquilino);
    }

    protected void OnChangeEstadoCivil(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, LookupTableVM> args)
    {
        idxMaritalStatus = args.Value;
        Fiador.ID_EstadoCivil = idxMaritalStatus;
    }
    // protected void onChangeInquilino(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, LookupTableVM> args)
    // {
    //     idxMaritalStatus = args.Value;
    //     Fiador.ID_EstadoCivil = idxMaritalStatus;
    // }
}

<style type="text/css" scoped>

    .single-line {
        margin: 0 12px 0 12px;
    }

    .custom-class.e-control-wrapper .e-textbox {
        text-align: center;
    }
</style>
