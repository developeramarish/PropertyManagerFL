@using PropertyManagerFL.Application.Interfaces.Services.AppManager;
@using PropertyManagerFL.Application.Interfaces.Services.Common;
@using PropertyManagerFL.Core.Entities;
@using PropertyManagerFL.Application.ViewModels.Documentos;
@using PropertyManagerFL.Application.ViewModels.EstadoCivil;
@using PropertyManagerFL.Application.ViewModels.Inquilinos;
@using PropertyManagerFL.Application.ViewModels.LookupTables;
@using PropertyManagerFL.UI.ApiWrappers;
@using static PropertyManagerFL.Application.Shared.Enums.AppDefinitions;

<div class="group-box-shadow">
    <HeaderDialogComponent HeaderCaption="@HeaderCaption" ImageName="home-owner"></HeaderDialogComponent>
</div>
<div class="container-fluid">
    <EditForm Model="Document">
        <div class="row my-3">
            <div class="form-group">
                <SfTextBox Enabled="true"
                           Placeholder="@L["lblTitulo"]"
                           CssClass="e-field  e-corner"
                           FloatLabelType="@FloatLabelType.Auto"
                           @bind-Value="@Document!.Title">
                </SfTextBox>
            </div>
            <div class="form-group my-2">
                <SfTextBox Multiline="true"
                           Placeholder="@L["lblSinopse"]"
                           HtmlAttributes="@NotesAttribute"
                           CssClass="e-field  e-corner"
                           FloatLabelType="FloatLabelType.Auto"
                           @bind-Value="@Document!.Description">
                </SfTextBox>
            </div>
            @if (EditMode == OpcoesRegisto.Inserir)
            {
                <div class="form-group my-2">
                    <SfDropDownList TValue="int" TItem="LookupTableVM" AllowFiltering="true" CssClass="e-dropdown-popup ml-5"
                                    Value="@idxTipoCategoriaDocumento" ShowClearButton="true" Width="250px"
                                    Enabled="@(EditMode == OpcoesRegisto.Inserir)"
                                    FilterBarPlaceholder="@L["TituloSelecao"]" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                    Placeholder="@L["TituloCategoriaDocumento"]" DataSource="@DocumentCategories" FloatLabelType="FloatLabelType.Always">
                        <DropDownListTemplates TItem="DocumentType">
                        </DropDownListTemplates>
                        <DropDownListEvents TValue="int" TItem="LookupTableVM" ValueChange="onChangeDocumentTypeCategories"></DropDownListEvents>
                        <DropDownListFieldSettings Value="Id" Text="Descricao"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div class="form-group my-2">
                    <SfDropDownList TValue="int" TItem="DocumentType" AllowFiltering="true" CssClass="e-dropdown-popup ml-5"
                                    Value="@idxTipoDocumento" ShowClearButton="true" Width="250px"
                                    Enabled="@(ShowTipoDocumento && (EditMode == OpcoesRegisto.Inserir))"
                                    FilterBarPlaceholder="@L["TituloSelecao"]" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                    Placeholder="@L["TituloTipoDocumento"]" DataSource="@DocumentTypes" FloatLabelType="FloatLabelType.Always">
                        <DropDownListTemplates TItem="DocumentType">
                        </DropDownListTemplates>
                        <DropDownListEvents TValue="int" TItem="DocumentType" ValueChange="onChangeDocumentType"></DropDownListEvents>
                        <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
            }
            else
            {
                <div class="d-flex justify-content-md-around gap-2 align-items-center">
                    <SfTextBox Placeholder="Categoria" Enabled="false"
                               CssClass="e-field  e-round-corner"
                               FloatLabelType="@FloatLabelType.Auto"
                               @bind-Value="@documentCategoryCaption">
                    </SfTextBox>
                    <SfTextBox Placeholder="Tipo" Enabled="false"
                               CssClass="e-field  e-corner"
                               FloatLabelType="@FloatLabelType.Auto"
                               @bind-Value="@documentTypeCaption">
                    </SfTextBox>
                </div>
            }
        </div>
        <div class="form-group my-3">
            @{
                if (!string.IsNullOrEmpty(documentCategoryFolder))
                {
                    var caregoryParam = documentCategoryFolder;
                }
            }
            <SfUploader ID="UploadFiles" @ref="sfUploader" AutoUpload=true
                        DropArea=".control-fluid"
                        AllowMultiple="false" AllowedExtensions=".pdf"
                        MaxFileSize="@MaxFileSize">
                <UploaderAsyncSettings SaveUrl="@controllerName_Save"
                                       RemoveUrl="@controllerName_Remove" />
                <UploaderEvents OnActionComplete="@OnActionCompleteHandler" />
            </SfUploader>
        </div>
        <div class="form-group my-2">
            @if (EditMode == OpcoesRegisto.Gravar)
            {
                <SfTextBox Multiline="true"
                           Placeholder="@PdfOrUrlCaption"
                           CssClass="e-field  e-corner"
                           FloatLabelType="@FloatLabelType.Auto"
                           @bind-Value="@uploadedFile">
                </SfTextBox>
            }
            else
            {
                <SfTextBox Multiline="true"
                           Placeholder="URL"
                           CssClass="e-field  e-corner"
                           FloatLabelType="@FloatLabelType.Auto"
                           @bind-Value="@Document!.URL">
                </SfTextBox>
            }
        </div>

    </EditForm>

    <ValidateErrorComponent Visible="@ErrorVisibility" DialogTitle="@L["TituloRecebimentos"]"
                            ValidationMessages="@ValidationsMessages"
                            OnCloseDialog="@(()=>ErrorVisibility = false)" />

</div>



<style type="text/css" scoped>
    .custom-class.e-control-wrapper .e-textbox {
        text-align: center;
    }
</style>
