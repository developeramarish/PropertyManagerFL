@page "/payments/dashboard"
@using PropertyManagerFL.Application.Interfaces.Services.AppManager;
@using PropertyManagerFL.Application.Interfaces.Services.Stats;
@using PropertyManagerFL.Application.Shared.Enums;
@using PropertyManagerFL.Application.ViewModels.Inquilinos;
@using PropertyManagerFL.Application.ViewModels.Recebimentos;

@using PropertyManagerFL.UI.Components.Cards
@using System.Globalization;

<header>
    <div class="module-title">
        <div class="title">@L["TituloPainelPagamentos"]</div>
        <div class="underline"></div>
    </div>
</header>

@if (rentsAdjustments is null)
{
    <LoadingData />
}
else
{

    <div id="dashboard" class="planner-dashboard">
        <div class="content view-detail-display" style="margin: 0px;">
            <div class="col-12 mb-3">
                <div class="container col-lg-12 col-md-12 col-sm-12">
                    <div class="row">
                        <PropertyManagerFL.UI.Components.Cards.PaymentCards TituloRecebido="@TituloRecebido"
                                                                            ResultadoRecebido="@totalPaymentsThisYear.ToString("C2")"
                                                                            TituloPrevisto="@TituloPrevisto"
                                                                            ResultadoPrevisto="@totalExpectedPaymentsThisYear.ToString("C2")"
                                                                            TituloEmFalta="@TituloEmFalta"
                                                                            ResultadoEmFalta="@totalDuePaymentsThisYear.ToString("C2")" />

                        <SfMessage ContentAlignment="HorizontalAlign.Center" Severity="MessageSeverity.Info">@DateTime.Now.Year.ToString()</SfMessage>
                    </div>
                    <div class="row card-box">
                        <PropertyManagerFL.UI.Components.Cards.PaymentCards TituloRecebido="@TituloRecebido"
                                                                            ResultadoRecebido="@totalPaymentsPreviousYear.ToString("C2")"
                                                                            TituloPrevisto="@TituloPrevisto"
                                                                            ResultadoPrevisto="@totalExpectedPaymentsPreviousYear.ToString("C2")"
                                                                            TituloEmFalta="@TituloEmFalta"
                                                                            ResultadoEmFalta="@totalDuePaymentsPreviousYear.ToString("C2")" />
                        <SfMessage ContentAlignment="HorizontalAlign.Center" Severity="MessageSeverity.Success">@DateTime.Now.AddYears(-1).Year.ToString()</SfMessage>
                    </div>
                    <div class="row card-box mt-3">
                        <div class="col-md-7">
                            <div class="table table-striped w-100">
                                <AlertMessage Message="@L["TituloValoresEmDivida"]" MessageType="AppDefinitions.AlertMessageType.Warning"></AlertMessage>
                                <SfGrid DataSource="@partiallyPaidPayments"
                                        RowHeight="28"
                                        GridLines="GridLine.Horizontal">
                                    <GridColumns>
                                        <GridColumn Field=@nameof(RecebimentoVM.DataMovimento) HeaderText="@L["TituloData"]"
                                                    TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.Inquilino) HeaderText="@L["TituloInquilino"]"
                                                    Width="250"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.ValorPrevisto) HeaderText="@L["TituloValorPrevisto"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.ValorRecebido) HeaderText="@L["TituloValorRecebido"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.ValorEmFalta) HeaderText="@L["TituloValorAPagar"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                    </GridColumns>

                                </SfGrid>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="table table-striped w-100">
                                <AlertMessage Message="@L["TituloValorDivida"]" MessageType="AppDefinitions.AlertMessageType.Error"></AlertMessage>
                                <SfGrid DataSource="@duePayments"
                                        RowHeight="28"
                                        GridLines="GridLine.Horizontal">
                                    <GridColumns>
                                        <GridColumn Field=@nameof(RecebimentoVM.DataMovimento) HeaderText="@L["TituloData"]"
                                                    TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.Inquilino) HeaderText="@L["TituloInquilino"]"
                                                    Width="250"></GridColumn>
                                        <GridColumn Field=@nameof(RecebimentoVM.ValorEmFalta) HeaderText="@L["TituloValorAPagar"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                    </GridColumns>
                                </SfGrid>
                            </div>
                        </div>
                    </div>
                    <div class="row card-box mt-3">
                        <div class="col-md-12">
                            <div class="table table-striped w-100">
                                <AlertMessage Message="@L["TituloAumentosRenda"]" MessageType="AppDefinitions.AlertMessageType.Success"></AlertMessage>
                                <SfGrid DataSource="@rentsIncreased"
                                        RowHeight="28"
                                        AllowTextWrap="true"
                                        TValue="HistoricoAtualizacaoRendasVM"
                                        GridLines="GridLine.Horizontal">
                                    <GridColumns>
                                        <GridColumn Field=@nameof(HistoricoAtualizacaoRendasVM.DateProcessed) HeaderText="@L["TituloData"]"
                                                    TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(HistoricoAtualizacaoRendasVM.NomeInquilino) HeaderText="@L["TituloInquilino"]"
                                                    Width="275"></GridColumn>
                                        <GridColumn Field=@nameof(HistoricoAtualizacaoRendasVM.DescricaoFracao) HeaderText="@L["TituloFracao"]"
                                                    Width="175"></GridColumn>
                                        <GridColumn Field=@nameof(HistoricoAtualizacaoRendasVM.PriorValue) HeaderText="@L["TituloAntes"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                        <GridColumn Field=@nameof(HistoricoAtualizacaoRendasVM.UpdatedValue) HeaderText="@L["TituloAgora"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                        <GridColumn HeaderText="@L["TituloAumento"]" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110">
                                            <Template>
                                                @{
                                                    var ctx = (context as HistoricoAtualizacaoRendasVM);
                                                    var rentIncrese = ctx.UpdatedValue - ctx.PriorValue;
                                                    <div>@rentIncrese.ToString("C2")</div>
                                                }
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="%" Format="C2"
                                                    TextAlign="TextAlign.Right" Width="110">
                                            <Template>
                                                @{
                                                    var ctx = (context as HistoricoAtualizacaoRendasVM);
                                                    var rateIncrease = Math.Round(((float)(ctx.UpdatedValue * 100) / (float)ctx.PriorValue) - 100, 2);
                                                    <div>@rateIncrease</div>
                                                }
                                            </Template>
                                        </GridColumn>

                                    </GridColumns>

                                </SfGrid>
                            </div>
                        </div>
                    </div>
                    @if (rentsAdjustments is not null)
                    {
                        <div class="row card-box mt-3">
                            <div class="col-md-12">
                                <div class="table table-striped w-100">
                                    <AlertMessage Message="@L["TituloPagamentosComAlteracoes"]" MessageType="AppDefinitions.AlertMessageType.Error"></AlertMessage>
                                    <SfGrid DataSource="@rentsAdjustments"
                                            RowHeight="28"
                                            AllowTextWrap="true"
                                            AllowSorting="true"
                                            AllowGrouping="true"
                                            TValue="RentAdjustmentsVM"
                                            GridLines="GridLine.Horizontal">
                                        <GridColumns>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.Id) HeaderText="#Id" IsPrimaryKey="true"
                                                        Visible="false"
                                                        TextAlign="TextAlign.Center" Width="60"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.TransactionId) HeaderText="#Id"
                                                        TextAlign="TextAlign.Center" Width="60"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.DataMovimento) HeaderText="@L["TituloData"]"
                                                        TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.UpdatedDate) HeaderText="Alteração"
                                                        TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.NomeInquilino) HeaderText="@L["TituloInquilino"]"
                                                        Width="275"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.ValorRenda) HeaderText="@L["TituloValorPrevisto"]" Format="C2"
                                                        Width="110">
                                            </GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.ValorPago) HeaderText="@L["TituloValorPago"]" Format="C2"
                                                        TextAlign="TextAlign.Right" Width="110">
                                            </GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.ValorEmDivida) HeaderText="@L["TituloEmFalta"]" Format="C2"
                                                        TextAlign="TextAlign.Right" Width="110"></GridColumn>
                                            <GridColumn Field=@nameof(RentAdjustmentsVM.Notas) HeaderText="@L["TituloNotas"]"
                                                        Width="250"></GridColumn>
                                        </GridColumns>
                                        @*                                         <GridAggregates>
                                <GridAggregate>
                                <GridAggregateColumns>
                                <GridAggregateColumn Field=@nameof(RentAdjustmentsVM.ValorRenda) Type="AggregateType.Sum" Format="C2">
                                <FooterTemplate>
                                @{
                                var groupTotal = (context as AggregateTemplateContext);
                                <p class="my-1">@groupTotal!.Sum.ToString()</p>
                                }
                                </FooterTemplate>
                                </GridAggregateColumn>
                                <GridAggregateColumn Field=@nameof(RentAdjustmentsVM.ValorPago) Type="AggregateType.Sum" Format="C2">
                                <FooterTemplate>
                                @{
                                var groupTotal = (context as AggregateTemplateContext);
                                <p class="my-1">@groupTotal!.Sum.ToString()</p>
                                }
                                </FooterTemplate>
                                </GridAggregateColumn>
                                <GridAggregateColumn Field=@nameof(RentAdjustmentsVM.ValorEmDivida) Type="AggregateType.Sum" Format="C2">
                                <FooterTemplate>
                                @{
                                var groupTotal = (context as AggregateTemplateContext);
                                <p class="my-1">@groupTotal!.Sum.ToString()</p>
                                }
                                </FooterTemplate>
                                </GridAggregateColumn>
                                </GridAggregateColumns>
                                </GridAggregate>
                                </GridAggregates>
                                *@
                                    </SfGrid>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="row card-box mt-3">
                        <div class="col-md-12">
                            <div class="table table-striped w-100">
                                <AlertMessage Message="@L["TituloAtrasoRendasCartasEnviadas"]" MessageType="AppDefinitions.AlertMessageType.Error"></AlertMessage>
                                <SfGrid DataSource="@latePaymentLetters"
                                        RowHeight="28"
                                        AllowTextWrap="true"
                                        TValue="LatePaymentLettersVM"
                                        GridLines="GridLine.Horizontal">
                                    <GridColumns>
                                        <GridColumn Field=@nameof(LatePaymentLettersVM.CreationDate) HeaderText="@L["TituloEnviadaEm"]"
                                                    TextAlign="TextAlign.Center" Format="d" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(LatePaymentLettersVM.RefersTo) HeaderText="@L["TituloMesEmAtraso"]"
                                                    Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(LatePaymentLettersVM.NomeInquilino) HeaderText="@L["TituloInquilino"]"
                                                    Width="275"></GridColumn>
                                        <GridColumn Field=@nameof(LatePaymentLettersVM.Description) HeaderText="@L["rbtDescricao"]"
                                                    Width="300"></GridColumn>
                                    </GridColumns>
                                </SfGrid>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@code {

    [Inject] public IRecebimentoService? paymentsService { get; set; }
    [Inject] public IInquilinoService? tenantsService { get; set; }
    [Inject] public IStatsService? statsService { get; set; }
    [Inject] public IStringLocalizer<App> L { get; set; }

    protected IEnumerable<RecebimentoVM>? paymentsList { get; set; }
    protected IEnumerable<RecebimentoVM>? paymentsThisYear { get; set; }
    protected IEnumerable<RecebimentoVM>? paymentsPreviousYear { get; set; }
    protected IEnumerable<RecebimentoVM>? partiallyPaidPayments { get; set; }
    protected IEnumerable<RecebimentoVM>? duePayments { get; set; }
    protected IEnumerable<HistoricoAtualizacaoRendasVM>? rentsIncreased { get; set; }
    protected IEnumerable<RentAdjustmentsVM>? rentsAdjustments { get; set; }
    protected IEnumerable<LatePaymentLettersVM>? latePaymentLetters { get; set; }

    protected decimal totalPaymentsThisYear { get; set; }
    protected decimal totalExpectedPaymentsThisYear { get; set; }
    protected decimal totalDuePaymentsThisYear { get; set; }

    protected decimal totalPaymentsPreviousYear { get; set; }
    protected decimal totalExpectedPaymentsPreviousYear { get; set; }
    protected decimal totalDuePaymentsPreviousYear { get; set; }

    protected string? TituloRecebido = "";
    protected string? TituloPrevisto = "";
    protected string? TituloEmFalta = "";

    protected string currentCulture = CultureInfo.CurrentCulture.Name;

    protected override async Task OnInitializedAsync()
    {

        paymentsList = (await paymentsService.GetAll())
        .ToList();

        paymentsThisYear = paymentsList
                .Where(e => e.DataMovimento.Year == DateTime.Now.Year);

        totalPaymentsThisYear = paymentsThisYear.Sum(e => e.ValorRecebido);
        totalExpectedPaymentsThisYear = paymentsThisYear.Sum(e => e.ValorPrevisto);
        totalDuePaymentsThisYear = paymentsThisYear.Sum(e => e.ValorEmFalta);

        paymentsPreviousYear = (await paymentsService
            .GetAll())
            .ToList()
            .Where(e => e.DataMovimento.Year == DateTime.Now.AddYears(-1).Year);

        totalPaymentsPreviousYear = paymentsPreviousYear.Sum(e => e.ValorRecebido);
        totalExpectedPaymentsPreviousYear = paymentsPreviousYear.Sum(e => e.ValorPrevisto);
        totalDuePaymentsPreviousYear = paymentsPreviousYear.Sum(e => e.ValorEmFalta);

        TituloRecebido = L["TituloValorRecebido"];
        TituloPrevisto = L["TituloValorPrevisto"];
        TituloEmFalta = L["TituloValorAPagar"];

        partiallyPaidPayments = paymentsList.Where(p => p.ValorEmFalta > 0 && p.ValorRecebido > 0);
        duePayments = paymentsList.Where(p => p.ValorRecebido == 0);

        rentsIncreased = (await tenantsService.GetAllRentUpdates()).ToList();
        rentsAdjustments = (await tenantsService.GetRentAdjustments()).ToList().OrderBy(o => o.TransactionId).ThenBy(o => o.Id);
        latePaymentLetters = (await tenantsService.GetLatePaymentLetters()).ToList();
    }
}
