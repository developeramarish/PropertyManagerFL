﻿@using PropertyManagerFL.Application.Interfaces.Services.AppManager
@using PropertyManagerFL.Application.ViewModels.Fracoes
@using static PropertyManagerFL.Application.Shared.Enums.AppDefinitions

<div class="control-container">
    <SfUploader ID="UploadFiles" @ref="sfUploader" AutoUpload=true
                DropArea=".control-fluid" CssClass="mt-1"
                AllowMultiple=true AllowedExtensions=" .jpg, .jpeg, .png, .gif"
                MaxFileSize="@MaxFileSize">
        <UploaderAsyncSettings SaveUrl="api/uploadunits/Save"
                               RemoveUrl="api/uploadunits/remove" />
        <UploaderEvents OnActionComplete="@OnActionCompleteHandler" />
    </SfUploader>
    @if (ImagensFracao!.Count() > 0)
    {
        <hr />
        <div class="control-container mt-1">
            <SfCarousel AnimationEffect="CarouselAnimationEffect.Fade">
                @foreach (var item in ImagensFracao!)
                {
                    <CarouselItem>
                        <SfButton CssClass="e-btn e-danger e-outline e-round-corner m-2"
                                  @onclick="() => DeleteImage(item)" Content="Delete" />
                        <figure class="card-box">
                            <img src="/uploads//unit_images/@item.Foto" style="margin-left:10px; margin-right:10px;height:100%;width:95%;" />
                            <figcaption class="img-caption">@item.Descricao</figcaption>
                        </figure>
                    </CarouselItem>
                }
            </SfCarousel>
        </div>
    }
</div>

@code {
    [Parameter] public List<NovaImagemFracao>? ImagensFracao { get; set; }
    [Parameter] public OpcoesRegisto EditMode { get; set; }
    [Parameter] public FracaoVM? SelectedUnit { get; set; }


    protected SfUploader? sfUploader;
    int MaxFileSize = 10 * 1024 * 1024; // 10 MB

    private void OnActionCompleteHandler(Syncfusion.Blazor.Inputs.ActionCompleteEventArgs args)
    {
        if (args.FileData.Count() == 0) return;

        foreach (var file in args.FileData)
        {
            ImagensFracao!.Add(
                new NovaImagemFracao()
                    {
                        Foto = Path.GetFileName(file.Name),
                        Id_Fracao = SelectedUnit!.Id, // FK to identify the unit the image belongs to
                        Descricao = $"Imagem_{file.Name}" // redundant for now, later may useful to identify 'room', 'kitchen', ...
                    });
        }

        SelectedUnit!.Imagens = ImagensFracao;
        StateHasChanged();
    }

    void DeleteImage(NovaImagemFracao item)
    {
        ImagensFracao!.Remove(item);
        StateHasChanged();
    }
}
